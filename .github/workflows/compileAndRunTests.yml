name: compileAndRunTests

on:
  push:
    branches:
      - main
      - master
      - develop

env:
  FORCE_COLOR: "1"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  buildOnLinuxWithGCC:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3
      - name: "Install lcov prerequisite"
        run: sudo apt-get -y install lcov
      - name: "Install doxygen prerequisite"
        run: sudo apt-get -y install doxygen
      - name: "Create build directory"
        run: mkdir build 
      - name: "Run CMake"
        working-directory: build
        run: >-
          cmake -G "Unix Makefiles" 
          -DCMAKE_BUILD_TYPE=Debug 
          -DSTP_ENABLE_BUILD_TESTS=ON 
          -DSTP_ENABLE_COVERAGE_REPORT=ON 
          -DSTP_ENABLE_DOXYGEN=ON 
          -DSTP_ENABLE_BUILD_EXAMPLES=ON 
          -DSTP_ENABLE_CALLGRIND_TARGETS=OFF
          -DSTP_ENABLE_STATIC_ANALYSIS=OFF
          -DSTP_ENABLE_BRUTAL_COMPILE_OPTIONS=OFF
          -DSTP_ENABLE_SANITIZERS=OFF
          ..
      - name: "Build targets"
        working-directory: build
        run: cmake --build .
      - name: "Generate coverage report"
        working-directory: build
        run: cmake --build . --target ccov-all
      - name: "Save coverage report artifact"
        uses: actions/upload-artifact@v3
        with: 
          name: code-coverage-report
          path: build/ccov
          retention-days: 1
      - name: "Generate doxygen documentation"
        working-directory: build
        run: cmake --build . --target docs
      - name: "Save documentation artifact"
        uses: actions/upload-artifact@v3
        with: 
          name: doxygen-docs
          path: docs
          retention-days: 1
      - name: "Run tests"          # runs tests again, so results will be readable at the bottom of output
        working-directory: build
        run: ctest

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [buildOnLinuxWithGCC]
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3
      - name: "Download code coverage report artifact"
        uses: actions/download-artifact@v3
        with:
          name: code-coverage-report
          path: gh_pages
      - name: "Download documentation artifact"
        uses: actions/download-artifact@v3
        with:
          name: doxygen-docs
          path: gh_pages
      - name: "Setup Pages"
        uses: actions/configure-pages@v2
      - name: "Upload pages artifact"
        uses: actions/upload-pages-artifact@v1
        with:
          path: gh_pages
      - name: "Deploy to GitHub Pages"
        id: deployment
        uses: actions/deploy-pages@v1

  buildOnWindowsWithMSVC:
    runs-on: windows-latest
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3
      - uses: ilammy/msvc-dev-cmd@v1
        with: 
          vsversion: 2022 
      - name: "Create build directory"
        run: mkdir build 
      - name: "Run CMake"
        working-directory: build
        run: >-
          cmake -G "Visual Studio 17 2022"
          -DSTP_ENABLE_BUILD_TESTS=ON 
          -DSTP_ENABLE_COVERAGE_REPORT=OFF 
          -DSTP_ENABLE_DOXYGEN=OFF 
          -DSTP_ENABLE_BUILD_EXAMPLES=ON 
          -DSTP_ENABLE_CALLGRIND_TARGETS=OFF
          -DSTP_ENABLE_STATIC_ANALYSIS=OFF
          -DSTP_ENABLE_BRUTAL_COMPILE_OPTIONS=OFF
          -DSTP_ENABLE_SANITIZERS=OFF
          ..
      - name: "Build targets"
        working-directory: build
        run: cmake --build . --target ALL_BUILD --config Debug
      - name: "Run tests"
        working-directory: build
        run: ctest -C Debug

  buildOnMacWithClang:
    runs-on: macos-latest
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3
      - name: "Create build directory"
        run: mkdir build 
      - name: "Run CMake"
        working-directory: build
        run: >-
          cmake
          -DCMAKE_BUILD_TYPE=Debug 
          -DSTP_ENABLE_BUILD_TESTS=ON 
          -DSTP_ENABLE_COVERAGE_REPORT=OFF 
          -DSTP_ENABLE_DOXYGEN=OFF 
          -DSTP_ENABLE_BUILD_EXAMPLES=ON 
          -DSTP_ENABLE_CALLGRIND_TARGETS=OFF
          -DSTP_ENABLE_STATIC_ANALYSIS=OFF
          -DSTP_ENABLE_BRUTAL_COMPILE_OPTIONS=OFF
          -DSTP_ENABLE_SANITIZERS=OFF
          ..
      - name: "Build targets"
        working-directory: build
        run: cmake --build .
      - name: "Run tests"
        working-directory: build
        run: ctest
